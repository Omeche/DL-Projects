from fastapi import FastAPI, File, UploadFile
import uvicorn
import numpy as np
from io import BytesIO
from PIL import Image
import tensorflow as tf
import requests

app = FastAPI()

def read_file_as_image(data) -> np.ndarray:
    image = np.array(Image.open(BytesIO(data)))
    return image

model_path = r"C:\Users\HP\potato disease\saved_models\4.keras" 

# Load the model
endpoint = ' '
CLASS_NAMES = ['Potato___Early_blight', 'Potato___Late_blight', 'Potato___healthy']
@app.post("/predict/")
async def predict(
    file: UploadFile = File(...)
):
    image = read_file_as_image(await file.read())
    image_batch = np.expand_dims(image, 0)
    json_data = {
        'instances' : image_batch.to_list()
    }
    requests.post(endpoint, json=json_data)
    prediction = np.array(requests.json()['predictions'][0])
    
    predicted_class = CLASS_NAMES[np.argmax(prediction)]
    confidence = round(np.max(prediction),2)
    
    return {
        'class': predicted_class,
        'confidence': float(confidence)
    }
if __name__ == '__main__':
    uvicorn.run(app, host='localhost', port=8000)